{simulation_start= 2, simulation_end =1000,skip_time_loop=[hhmodel]}
class neuron         
{
  attributes
          %Conductances and reversal potential of the three ion channels
        real Gna,Ena;  
        real Gk,Ek;
        real Gleak,Eleak;
       	real Istim;                             %current stimulus
        series real M,N,H;          %Activation and Inactivation Parameters of the Ion channels
        series real Vm;                               %membrane voltage       
        real C;                                   % Cell capacitance           
        real E;                                   %the constant
        real Dt;                                  %Integration time constant
   constraints
        %The voltage equation
        ( Vm-`Vm)= Dt *(Istim-((Gna*pow(`M,3)*`H*(`Vm+62-Ena))+(Gk*pow(`N,4)*(`Vm+62-Ek))+(Gleak*(`Vm+62-Eleak))))/C;
        %m,n,h dynamics 
        ( M-`M)=Dt *((1-`M) * ((0.1*(-Vm-62 + 25))/(pow(E,(-Vm-62 + 25)/10)-1)) - 4 * pow(E,(-Vm-62) / 18)*`M);
        (N-`N)=Dt *((1-`N) * (((0.1/10)*(-Vm-62+10))/(pow(E,(-Vm-62+ 10)/10)-1)) - 0.125*pow(E,(-Vm-62)/80)*`N);
        (H-`H)=Dt *((1-H) * ((0.7/10)*pow(E,(-Vm-62)/20)) - (1/(pow(E,(-Vm-62+30)/10)+1))*`H);
         
   constructors neuron(G1,E1,G2,E2,G3,E3,Is,T1)
   {
    Gna = G1;Ena = E1;
     Gk = G2;Ek = E2;
     Gleak = G3;Eleak = E3;
     Istim = Is;   
     C=1;
     Dt=T1; 
     M<1>  = 0.068775;                 %initial values 
     N<1> = 0.35286656;
     H<1> = 0.515186; 
     Vm<1>  = -70;               %resting voltage of the cell. 
     E = 2.718281828;
   }
}
class hhmodel
{
  attributes
      neuron N1;
  constructors hhmodel()
  {
       N1 = new neuron(120,115,36,-12,0.3,-10.0,50.0,0.2/10);  %50 mA current is applied
  }
}
$

Compile

?- tcob2swi('hh.tcob','hhmodel()').

Load

?- [hh].

Run

?- main(_,_).
